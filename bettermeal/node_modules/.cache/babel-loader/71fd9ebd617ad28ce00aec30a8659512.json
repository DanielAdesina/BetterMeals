{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\danie\\\\Documents\\\\computerscience\\\\BetterMeals\\\\bettermeal\\\\src\\\\components\\\\Meals\\\\MealInfo.js\";\nimport React, { Component } from 'react';\nimport config from \"../../config.json\";\nimport axios from 'axios';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MealInfo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      meal: {},\n      images: /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n    };\n  }\n\n  componentDidMount() {\n    const id = this.props.match.params.id;\n    const storageCheck = JSON.parse(localStorage.getItem(id));\n    const options = {\n      method: 'GET',\n      url: 'https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/' + id + '/information',\n      headers: {\n        'X-RapidAPI-Host': 'spoonacular-recipe-food-nutrition-v1.p.rapidapi.com',\n        'X-RapidAPI-Key': config[\"api-key\"]\n      }\n    };\n\n    if (storageCheck && Date.now() < storageCheck.ttl) {\n      this.setState({\n        meal: storageCheck\n      });\n      const imageList = res.data.extendedIngredients.map(ingredient => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://spoonacular.com/cdn/ingredients_100x100/\" + ingredient.image\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 84\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 80\n      }, this));\n      this.setState({\n        meal: res.data,\n        images: imageList\n      });\n      console.log(storageCheck);\n    } else {\n      axios.request(options).then(res => {\n        res.data.ttl = Date.now() + 86400 * 1000;\n        localStorage.setItem(id, JSON.stringify(res.data));\n        const imageList = res.data.extendedIngredients.map(ingredient => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"https://spoonacular.com/cdn/ingredients_100x100/\" + ingredient.image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 88\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 84\n        }, this));\n        this.setState({\n          meal: res.data,\n          images: imageList\n        });\n      }).catch(err => {\n        console.error(err);\n      });\n    }\n  }\n\n  render() {\n    const id = this.props.match.params.id;\n    let meal = this.state.meal;\n    console.log(meal);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"clearfix\",\n        style: {\n          backgroundColor: 'white'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          style: {\n            width: \"556px\",\n            height: \"370px\"\n          },\n          src: \"https://spoonacular.com/recipeImages/\" + id + \"-556x370.jpg\",\n          align: \"left\",\n          class: \"col-md-8 float mb-3 mt-2 me-5 ms-md-3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: meal.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          dangerouslySetInnerHTML: {\n            __html: meal.summary\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: this.state.images\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default MealInfo;","map":{"version":3,"sources":["C:/Users/danie/Documents/computerscience/BetterMeals/bettermeal/src/components/Meals/MealInfo.js"],"names":["React","Component","config","axios","MealInfo","constructor","props","state","meal","images","componentDidMount","id","match","params","storageCheck","JSON","parse","localStorage","getItem","options","method","url","headers","Date","now","ttl","setState","imageList","res","data","extendedIngredients","map","ingredient","image","console","log","request","then","setItem","stringify","catch","err","error","render","backgroundColor","width","height","title","__html","summary"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport config from \"../../config.json\";\r\nimport axios from 'axios';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\n\r\nclass MealInfo extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            meal: {},\r\n            images: <></>\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        const id = this.props.match.params.id\r\n        const storageCheck = JSON.parse(localStorage.getItem(id));\r\n        const options = {\r\n            method: 'GET',\r\n            url: 'https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/' + id + '/information',\r\n            headers: {\r\n            'X-RapidAPI-Host': 'spoonacular-recipe-food-nutrition-v1.p.rapidapi.com',\r\n            'X-RapidAPI-Key': config[\"api-key\"]\r\n            }\r\n        };\r\n        if(storageCheck && (Date.now() < storageCheck.ttl)){\r\n            this.setState({meal: storageCheck})\r\n            const imageList = res.data.extendedIngredients.map((ingredient) => <li><img src={\"https://spoonacular.com/cdn/ingredients_100x100/\" + ingredient.image}></img></li>)\r\n                this.setState({meal: res.data, \r\n                    images: imageList})         \r\n            console.log(storageCheck)\r\n        }\r\n        else{\r\n            axios.request(options).then(res => {\r\n                res.data.ttl = Date.now() + (86400 * 1000);\r\n                localStorage.setItem(id, JSON.stringify(res.data));\r\n                const imageList = res.data.extendedIngredients.map((ingredient) => <li><img src={\"https://spoonacular.com/cdn/ingredients_100x100/\" + ingredient.image}></img></li>)\r\n                this.setState({meal: res.data, \r\n                    images: imageList})                \r\n            }).catch(err => {\r\n                console.error(err)\r\n            })\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const id = this.props.match.params.id\r\n        let meal = this.state.meal\r\n        console.log(meal)\r\n        return(\r\n            <>\r\n            <div class=\"clearfix\" style={{backgroundColor: 'white'}}>\r\n                <img style={{width: \"556px\", height: \"370px\"}} src={\"https://spoonacular.com/recipeImages/\" + id + \"-556x370.jpg\"} align=\"left\" class=\"col-md-8 float mb-3 mt-2 me-5 ms-md-3\"></img>\r\n                <h1>{meal.title}</h1>\r\n                <p dangerouslySetInnerHTML={{__html: meal.summary}}></p>\r\n                <ul>\r\n                    {this.state.images}\r\n                </ul>\r\n\r\n            </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MealInfo;"]},"metadata":{},"sourceType":"module"}