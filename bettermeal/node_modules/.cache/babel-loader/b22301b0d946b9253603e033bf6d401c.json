{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\danie\\\\Documents\\\\computerscience\\\\BetterMeals(NONPRODUCTION)\\\\bettermeals\\\\bettermeal\\\\src\\\\components\\\\App\\\\MealSnippet.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport config from \"../../config.json\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass MealSnippet extends Component {\n  constructor(props) {\n    super(props);\n\n    this.loadContents = () => {\n      const id = this.props.id;\n      let meal = {};\n      let summary = \"\";\n      const storageCheck = JSON.parse(localStorage.getItem(id));\n      const options = {\n        method: 'GET',\n        url: 'https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/' + id + '/information',\n        headers: {\n          'X-RapidAPI-Host': 'spoonacular-recipe-food-nutrition-v1.p.rapidapi.com',\n          'X-RapidAPI-Key': config[\"api-key\"]\n        }\n      };\n\n      if (storageCheck && Date.now() < storageCheck.ttl) {\n        meal = storageCheck;\n        summary = storageCheck.summary;\n        this.setState({\n          meal: storageCheck,\n          summary: storageCheck.summary\n        });\n      } else {\n        axios.request(options).then(res => {\n          res.data.ttl = Date.now() + 86400 * 1000;\n          localStorage.setItem(id, JSON.stringify(res.data));\n          meal = res.data;\n          summary = res.data.summary;\n          this.setState({\n            meal: res.data,\n            summary: res.data.summary\n          });\n        }).catch(err => {\n          console.error(err);\n        });\n      }\n\n      return [meal, summary];\n    };\n\n    this.state = {\n      meal: {},\n      summary: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.loadContents();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.id !== prevProps.id) {\n      this.loadContents();\n    }\n  }\n\n  render() {\n    const id = this.props.id;\n    let meal = this.state.meal;\n    let summary = this.state.summary;\n    let pFontSize = 15;\n\n    let mealLink = /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/meal/\" + this.props.id,\n      class: \"btn\",\n      style: {\n        borderRadius: \"0px\",\n        backgroundColor: \"lightblue\",\n        width: \"100%\",\n        color: \"black\",\n        fontWeight: \"bold\",\n        position: \"relative\",\n        left: \"0vw\"\n      },\n      children: \"View More\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 24\n    }, this);\n\n    if (this.props.id === \"\") {\n      pFontSize = 20;\n      mealLink = /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n    }\n\n    if (id === \"\") {\n      summary = \"No Meal Selected\";\n    }\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        alt: \"Meal\",\n        style: {\n          width: \"278px\",\n          height: \"185px\"\n        },\n        src: \"https://spoonacular.com/recipeImages/\" + meal.id + \"-556x370.jpg\",\n        align: \"left\",\n        class: \"col-md-8 float mb-3 mt-3 me-5 ms-md-3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          marginTop: \"1vh\"\n        },\n        children: meal.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          margin: \"2vw\",\n          fontSize: pFontSize + \"px\"\n        },\n        dangerouslySetInnerHTML: {\n          __html: summary\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), mealLink]\n    }, void 0, true);\n  }\n\n}\n\nexport default MealSnippet;","map":{"version":3,"sources":["C:/Users/danie/Documents/computerscience/BetterMeals(NONPRODUCTION)/bettermeals/bettermeal/src/components/App/MealSnippet.js"],"names":["React","Component","axios","config","Link","MealSnippet","constructor","props","loadContents","id","meal","summary","storageCheck","JSON","parse","localStorage","getItem","options","method","url","headers","Date","now","ttl","setState","request","then","res","data","setItem","stringify","catch","err","console","error","state","componentDidMount","componentDidUpdate","prevProps","render","pFontSize","mealLink","borderRadius","backgroundColor","width","color","fontWeight","position","left","height","marginTop","title","margin","fontSize","__html"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport config from \"../../config.json\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass MealSnippet extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            meal: {},\r\n            summary: \"\"\r\n        }\r\n    }\r\n\r\n    loadContents = () => {\r\n        const id = this.props.id\r\n\r\n        let meal = {}\r\n        let summary = \"\"\r\n\r\n        const storageCheck = JSON.parse(localStorage.getItem(id));\r\n        const options = {\r\n            method: 'GET',\r\n            url: 'https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/' + id + '/information',\r\n            headers: {\r\n            'X-RapidAPI-Host': 'spoonacular-recipe-food-nutrition-v1.p.rapidapi.com',\r\n            'X-RapidAPI-Key': config[\"api-key\"]\r\n            }\r\n        };\r\n        if(storageCheck && (Date.now() < storageCheck.ttl)){\r\n            \r\n            meal = storageCheck\r\n            summary = storageCheck.summary\r\n            this.setState({meal: storageCheck, summary: storageCheck.summary})\r\n            \r\n        }\r\n        else{\r\n            axios.request(options).then(res => {\r\n                res.data.ttl = Date.now() + (86400 * 1000);\r\n                localStorage.setItem(id, JSON.stringify(res.data));\r\n                meal = res.data\r\n                summary = res.data.summary\r\n                this.setState({meal: res.data, summary: res.data.summary})\r\n                        \r\n            }).catch(err => {\r\n                console.error(err)\r\n            })\r\n        }\r\n        return [meal, summary]\r\n    }\r\n\r\n    componentDidMount(){\r\n\r\n        this.loadContents()\r\n        \r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n        if (this.props.id !== prevProps.id) {\r\n\r\n            this.loadContents()\r\n        }\r\n\r\n    }\r\n\r\n\r\n    render(){\r\n        const id = this.props.id\r\n        let meal = this.state.meal\r\n        let summary = this.state.summary\r\n\r\n        let pFontSize = 15\r\n        let mealLink = <Link to={\"/meal/\" + this.props.id} class=\"btn\"\r\n        style={{borderRadius: \"0px\", backgroundColor: \"lightblue\", width: \"100%\", color: \"black\", fontWeight: \"bold\", position:\"relative\", left: \"0vw\"}}>View More</Link>\r\n\r\n        if(this.props.id === \"\"){\r\n            pFontSize = 20;\r\n            mealLink = <></>\r\n        }\r\n\r\n        if(id === \"\"){\r\n        \r\n        \r\n            summary = \"No Meal Selected\"\r\n            \r\n        }\r\n\r\n        return(\r\n            <>\r\n                <img alt=\"Meal\" style={{width: \"278px\", height: \"185px\"}} src={\"https://spoonacular.com/recipeImages/\" + meal.id + \"-556x370.jpg\"} \r\n                align=\"left\" class=\"col-md-8 float mb-3 mt-3 me-5 ms-md-3\"></img>\r\n                <h2 style={{marginTop: \"1vh\"}}>{meal.title}</h2>\r\n                <p style={{margin: \"2vw\", fontSize: pFontSize + \"px\"}} dangerouslySetInnerHTML={{__html: summary}}></p>\r\n                {mealLink}\r\n            </>\r\n        )\r\n        \r\n\r\n        \r\n       \r\n    }\r\n}\r\n\r\nexport default MealSnippet;"]},"metadata":{},"sourceType":"module"}